{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Initialize_UncrawledFolders": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "UncrawledFolders",
                            "type": "array",
                            "value": [
                                "@triggerBody()?['folder']"
                            ]
                        }
                    ]
                },
                "runAfter": {}
            },
            "Initialize_LoopIndex": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "LoopIndex",
                            "type": "integer",
                            "value": 0
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_UncrawledFolders": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Until": {
                "type": "Until",
                "expression": "@equals(variables('LoopIndex'),sub(length(variables('UncrawledFolders')), 1))",
                "limit": {
                    "count": 5000,
                    "timeout": "PT24H"
                },
                "actions": {
                    "Increment_LoopIndex": {
                        "type": "SetVariable",
                        "inputs": {
                            "name": "LoopIndex",
                            "value": "@int(iterationIndexes('Until'))"
                        }
                    },
                    "Get_files_(properties_only)": {
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "referenceName": "sharepointonline"
                                }
                            },
                            "method": "get",
                            "path": "/datasets/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_site_address')))}/tables/@{encodeURIComponent(encodeURIComponent(parameters('sharepoint_document_library')))}/getfileitems",
                            "queries": {
                                "$top": 5000,
                                "folderPath": "@variables('UncrawledFolders')[variables('LoopIndex')]",
                                "viewScopeOption": "Default"
                            }
                        },
                        "runAfter": {
                            "Increment_LoopIndex": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "For_each": {
                        "type": "Foreach",
                        "foreach": "@body('Get_files_(properties_only)')?['value']",
                        "actions": {
                            "If_Folder": {
                                "type": "If",
                                "expression": {
                                    "and": [
                                        {
                                            "equals": [
                                                "@item()?['{IsFolder}']",
                                                true
                                            ]
                                        }
                                    ]
                                },
                                "actions": {
                                    "Append_folder_to_UncrawledFolders": {
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                            "name": "UncrawledFolders",
                                            "value": "@item()?['{FullPath}']"
                                        }
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "Check_whether_blob_exists": {
                                            "type": "ServiceProvider",
                                            "inputs": {
                                                "parameters": {
                                                    "containerName": "@parameters('blob_container_name')",
                                                    "blobName": "@{concat('/',replace(parameters('sharepoint_site_address'),'https://',''))}/@{item()?['{FullPath}']}"
                                                },
                                                "serviceProviderConfiguration": {
                                                    "connectionName": "AzureBlob-1",
                                                    "operationId": "blobExists",
                                                    "serviceProviderId": "/serviceProviders/AzureBlob"
                                                }
                                            }
                                        },
                                        "If_Blob_Exists": {
                                            "type": "If",
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@body('Check_whether_blob_exists')?['isBlobExists']",
                                                            true
                                                        ]
                                                    }
                                                ]
                                            },
                                            "actions": {
                                                "Update_or_Skip": {
                                                    "type": "Workflow",
                                                    "inputs": {
                                                        "host": {
                                                            "workflow": {
                                                                "id": "sharepoint-ingest-blob-exists-child"
                                                            }
                                                        },
                                                        "body": {
                                                            "id": "@item()?['ID']",
                                                            "fullpath": "@item()?['{FullPath}']",
                                                            "category": "@triggerBody()?['category']"
                                                        }
                                                    }
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "Index_and_Sync": {
                                                        "type": "Workflow",
                                                        "inputs": {
                                                            "host": {
                                                                "workflow": {
                                                                    "id": "index-and-sync-child"
                                                                }
                                                            },
                                                            "body": {
                                                                "identifier": "@item()?['{Identifier}']",
                                                                "fullpath": "@item()?['{FullPath}']",
                                                                "category": "@triggerBody()?['category']"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Check_whether_blob_exists": [
                                                    "SUCCEEDED"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "runAfter": {
                            "Get_files_(properties_only)": [
                                "SUCCEEDED"
                            ]
                        }
                    }
                },
                "runAfter": {
                    "Initialize_LoopIndex": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Response": {
                "type": "Response",
                "kind": "Http",
                "inputs": {
                    "statusCode": 200
                },
                "runAfter": {
                    "Until": [
                        "SUCCEEDED"
                    ]
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_a_HTTP_request_is_received": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "type": "object",
                        "properties": {
                            "folder": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "kind": "Stateful"
}